@model TheGioiLoa.Models.ViewModel.CreateProductViewModel

@{
    ViewBag.Title = "Thêm sản phẩm mới";
    Layout = "~/Views/Shared/Admin/_AdminLayout.cshtml";
}
@using (Html.BeginForm("CreateProduct", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row" id="createProductPage">
        <div class="col-md-9">

            <div class="form-group mb-2 mt-0">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control rounded-0", @placeholder = "Tên sản phẩm" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger mt-2" })
            </div>

            @*Mô tả ngắn*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Mô tả ngắn</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.Description, new { @class = "textarea", @rows = "3", @placeholder = "Nhập mô tả ngắn ở đây ..." })
                </div>
            </div>

            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Dữ liệu sản phẩm</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        @Html.LabelFor(model => model.BrandId, new { @class = "col-md-2 col-form-label-sm" })
                        <div class="col-md-10">
                            <select name="BrandId" id="BrandId" class="form-control form-control-sm">
                                <option value="">-- Không có thương hiệu --</option>
                                @if (ViewBag.Brand != null)
                                {
                                    foreach (var item in ViewBag.Brand)
                                    {
                                        <option value="@item.BrandId">@item.Name</option>
                                    }
                                }
                            </select>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Price, new { @class = "col-md-4 col-form-label-sm" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group row">
                                @Html.LabelFor(model => model.ListedPrice, new { @class = "col-md-4 col-form-label-sm text-md-right" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.ListedPrice, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.ListedPrice, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>
            </div>

            @*Đặc điểm nổi bật*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Đặc điểm nổi bật</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.Characteristics, new { @class = "textarea", @rows = "3", @placeholder = "Nhập mô tả ngắn ở đây ..." })
                </div>
            </div>

            @*Thông số kỹ thuật*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Thông số kỹ thuật</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.Details, new { @class = "textarea", @rows = "3", @placeholder = "Nhập mô tả ngắn ở đây ..." })
                </div>
            </div>

            @* Khuyến Mãi *@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Khuyến mãi</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.Promotion, new { @class = "textarea", @rows = "3", @placeholder = "Nhập mô tả ngắn ở đây ..." })
                </div>
            </div>

            @* Videos *@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Video</h3>
                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                            <i class="fas fa-minus"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    @Html.TextAreaFor(model => model.Video, new { @class = "textarea", @rows = "3", @placeholder = "Nhập mô tả ngắn ở đây ..." })
                </div>
            </div>

        </div>
        <div class="col-md-3">

            @*Submit Form Card*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Đăng</h3>
                </div>
                <div class="card-body">
                    <div class="form-group row">
                        <select name="Status" id="Status" class="form-control form-control-sm rounded-0 col-md-8">
                            <option value="1" checked>Công bố</option>
                            <option value="2">Chưa đăng</option>
                            <option value="3">Hết hàng</option>
                            <option value="4">Đưa vào thùng rác</option>
                        </select>
                        <div class="col-md-4">
                            <button type="submit" id="submitFormButton" class="btn btn-primary btn-flat btn-sm btn-block">Đăng</button>
                        </div>
                        <div class="col-md-12 d-none" id="deleteNoti">
                            <p class="my-2 small font-italic text-danger">Lưu ý: Những thay đổi của bạn sẽ không được lưu!</p>
                        </div>
                    </div>
                </div>
            </div>

            @*Danh Mục Sản Phẩm*@
            <div class="card rounded-0" id="createProduct">
                <div class="card-header">
                    <h3 class="card-title">Danh Mục Sản Phẩm</h3>
                </div>
                <div class="card-body" id="categoryList">
                    @if (ViewBag.CategoryId != null)
                    {
                        foreach (var item in ViewBag.CategoryId)
                        {
                            if (item.CategoryParentId == null)
                            {
                                <div class="custom-control custom-checkbox">
                                    <input class="custom-control-input category-click" data-level="parent" type="checkbox" id="@item.CategoryId" value="@item.CategoryId" name="CategoryId">
                                    <label for="@item.CategoryId" class="custom-control-label font-weight-normal">@item.Name</label>
                                </div>

                                <div class="parentCategory-@item.CategoryId" style="display: block;">
                                    @foreach (var child in ViewBag.CategoryId)
                                    {
                                        if (child.CategoryParentId == item.CategoryId)
                                        {
                                            <div class="">
                                                <div class="custom-control custom-checkbox ml-4">
                                                    <input class="custom-control-input category-click child-category" data-level="child" data-parent-id="@item.CategoryId" type="checkbox" id="@child.CategoryId" value="@child.CategoryId" name="CategoryId">
                                                    <label for="@child.CategoryId" class="custom-control-label font-weight-normal">@child.Name</label>
                                                </div>
                                            </div>
                                            <div class="pl-4 childCategory-@child.CategoryId">
                                                @foreach (var subChild in ViewBag.CategoryId)
                                                {
                                                    if (subChild.CategoryParentId == child.CategoryId)
                                                    {
                                                        <div class="custom-control custom-checkbox ml-4">
                                                            <input class="custom-control-input category-click sub-child-category" data-level="subChild" data-parent-id="@child.CategoryId" type="checkbox" id="@subChild.CategoryId" value="@subChild.CategoryId" name="CategoryId">
                                                            <label for="@subChild.CategoryId" class="custom-control-label font-weight-normal">@subChild.Name</label>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        }
                                    }

                                </div>
                            }
                        }
                    }
                </div>
            </div>

            @*Tag Sản Phẩm*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Từ khóa sản phẩm (Tag)</h3>
                </div>
                <div class="card-body">
                    <div class="input-group input-group-sm">
                        @Html.HiddenFor(model => model.Tag)
                        <input type="text" id="AddTag" name="AddTag" class="form-control rounded-0">
                        <span class="input-group-append">
                            <button type="button" class="btn btn-info btn-flat rounded-0" id="addTag">Thêm Tag</button>
                        </span>
                    </div>
                    <p class="my-2 font-italic small">Phân cách các thẻ bằng dấu phẩy</p>
                    <div class="tag-area row px-2" id="renderTag">

                    </div>
                </div>
            </div>


            @*Ảnh Sản Phẩm*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Ảnh sản phẩm</h3>
                </div>
                <div class="card-body">
                    <div class="input-group input-group-sm">

                        <input type="text" class="form-control rounded-0">
                        <span class="input-group-append">
                            <button type="button" class="btn btn-info btn-flat rounded-0">Thêm Tag</button>
                        </span>
                    </div>
                    <p class="my-2 font-italic small">Phân cách các thẻ bằng dấu phẩy</p>
                    <div class="tag-area">
                    </div>
                </div>
            </div>


            @*Album hình ảnh sản phẩm*@
            <div class="card rounded-0">
                <div class="card-header">
                    <h3 class="card-title">Album hình ảnh sản phẩm</h3>
                </div>
                <div class="card-body">
                    @Html.HiddenFor(model => model.Image)
                    <div class="text-center">
                        <a class="btn btn-info btn-flat text-white" data-toggle="modal" data-target="#uploadImage" onclick="uploadClick()">
                            <i class="fa fa-upload"></i>
                            Upload hoặc chọn hình
                        </a>
                    </div>
                    <div class="row mt-2" id="renderImage">

                    </div>
                    <p class="my-2 font-italic small text-center">Bạn có thể chọn 1 hoặc nhiều hình để hiển thị trên trang sản phẩm</p>
                </div>
            </div>

        </div>
    </div>
}
<div class="modal fade" id="uploadImage" style="display: none;" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content rounded-0">
            <div class="modal-header border-0">
                <h4 class="card-title font-weight-bold">Ảnh sản phẩm</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body py-0">
                <ul class="nav nav-tabs" id="custom-content-below-tab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active rounded-0 py-1 px-2" id="upload-tab" data-toggle="pill" href="#upload" role="tab" aria-controls="upload" aria-selected="true">Tải lên tập tin</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-0 py-1 px-2" id="upload-tab" data-toggle="pill" href="#library" role="tab" aria-controls="library" aria-selected="false">Thư viện</a>
                    </li>
                </ul>
                <div class="tab-content" id="upload-tabContent">
                    <div class="tab-pane fade active show p-4" id="upload" role="tabpanel" aria-labelledby="upload-tab">
                        <div class="row">
                            <div class="col-md-6 col-sm-12">
                                <!-- Our markup, the important part here! -->
                                <div id="drag-and-drop-zone" class="dm-uploader p-5">
                                    <h3 class="mb-5 mt-5 text-muted">Click vào bên dưới để chọn hình</h3>

                                    <div class="btn btn-primary btn-block mb-5">
                                        <span>Chọn Hình ảnh từ máy tính</span>
                                        <input name="File" id="File" accept=".JPG,.JPEG,.PNG,.GIF" type="file" title='Click để chọn hình' />
                                    </div>
                                </div><!-- /uploader -->

                            </div>
                            <div class="col-md-6 col-sm-12">
                                <div class="card h-100 rounded-0">
                                    <div class="card-header">
                                        Thông tin
                                    </div>

                                    <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                                        <li class="text-muted text-center empty">Chưa có hình để đăng.</li>
                                    </ul>
                                </div>
                            </div>
                        </div><!-- /file list -->
                        <script type="text/html" id="files-template">
                            <li class="media">
                                <div class="media-body mb-1">
                                    <p class="mb-2">
                                        <strong>%%filename%%</strong><br />Trạng thái: <span class="text-muted">Đang đăng ...</span>
                                    </p>
                                    <div class="progress mb-2">
                                        <div class="progress-bar progress-bar-striped progress-bar-animated bg-primary"
                                             role="progressbar"
                                             style="width: 0%"
                                             aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                                        </div>
                                    </div>
                                    <hr class="mt-1 mb-1" />
                                </div>
                            </li>
                        </script>
                    </div>
                    <div class="tab-pane fade p-4" id="library" role="tabpanel" aria-labelledby="library-tab">
                        <div class="row" id="renderLibrary">

                        </div>
                        <div class="clearfix">
                            <div class="float-left">
                                <a href="#" class="btn btn-primary btn-flat btn-sm">< Trang trước</a>
                            </div>
                            <div class="float-right">
                                <a href="#" class="btn btn-primary btn-flat btn-sm">Trang sau ></a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer py-1">
                <a class="btn btn-info text-white float-right btn-sm btn-flat" id="submitModalImage">Thiết lập ảnh sản phẩm</a>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section Heads {


}
@section Scripts {

    <script>
        $(".category-click").click(function (e) {
            if ($(this).is(":checked")) {
                if ($(this).attr("data-level") == "child") {
                    $("#createProduct #" + $(this).attr("data-parent-id")).prop('checked', true);
                }
                if ($(this).attr("data-level") == "subChild") {
                    var elm = $("#createProduct #" + $(this).attr("data-parent-id"));
                    elm.prop('checked', true);
                    $("#createProduct #" + elm.attr("data-parent-id")).prop('checked', true);
                }
            }
            else {
                if ($(this).attr("data-level") == "child") {
                    $("#createProduct .childCategory-" + $(this).attr("id") + " .sub-child-category").prop('checked', false);
                }
                if ($(this).attr("data-level") == "parent") {
                    $("#createProduct .parentCategory-" + $(this).attr("id") + " .child-category").prop('checked', false);
                    $("#createProduct .parentCategory-" + $(this).attr("id") + " .sub-child-category").prop('checked', false);
                }
            }
        });
        //$(document).ready(function () {
        //    $('.js-uploader__box').uploader();
        //});
    </script>
    <script>
        $(function () {
            // Summernote
            $('.textarea').summernote({
                height: 250
            });
        });
    </script>
    <script>
        $("#Status").change(function () {
            if ($(this).val() == "4") {
                $("#deleteNoti").removeClass("d-none");
                $("#submitFormButton").html("Xóa");
            }
            else {
                $("#deleteNoti").addClass("d-none");
                $("#submitFormButton").html("Đăng");
            }
        });

        //AddTag
        var tagInputResult = new Array();

        $("#addTag").click(function (e) {
            var tags = $("#AddTag").val().replace(/\s{2,}/g, ' ');
            var tag = tags.split(',');
            tag = tag.map(s => s.trim());

            tag = tagInputResult.concat(tag);
            var tagResult = [];
            tag.forEach((element) => {
                if (!tagResult.includes(element)) {
                    if (element != "")
                        tagResult.push(element)
                }
            });
            console.log(tagResult);
            var result = "";
            for (var b in tagResult) {
                if (tagResult != null) {
                    result += "<div id='parent" + tagResult[b] + "'><a href='#' onclick='removeTag(this)' class='removeTag' data-id='" + tagResult[b] + "'><i class='fas fa-times-circle small text-danger mb-1'></i></a><span class='mr-2 badge badge-light border' value='" + tagResult[b] + "'>" + tagResult[b] + "</span></div>";
                }
            }
            $("#renderTag").html(result);
            $("#AddTag").val("");


            tagInputResult = tagResult;
            $("#Tag").val(tagInputResult.join(','));
        });

        function removeTag(e) {
            tagInputResult.splice(tagInputResult.indexOf($(e).attr("data-id")), 1);
            $("#Tag").val(tagInputResult.join(','));
            var result = "";
            for (var b in tagInputResult) {
                if (tagInputResult != null) {
                    result += "<div id='parent" + tagInputResult[b] + "'><a href='#' onclick='removeTag(this)' class='removeTag' data-id='" + tagInputResult[b] + "'><i class='fas fa-times-circle small text-danger mb-1'></i></a><span class='mr-2 badge badge-light border' value='" + tagInputResult[b] + "'>" + tagInputResult[b] + "</span></div>";
                }
            }
            $("#renderTag").html(result);
        };
    </script>

    <script>
        $(function () {
            /*
             * For the sake keeping the code clean and the examples simple this file
             * contains only the plugin configuration & callbacks.
             *
             * UI functions ui_* can be located in: demo-ui.js
             */
            $('#drag-and-drop-zone').dmUploader({ //
                url: '/Admin/UploadImage',
                maxFileSize: 3000000, // 3 Megs
                onDragEnter: function () {
                    // Happens when dragging something over the DnD area
                    this.addClass('active');
                },
                onDragLeave: function () {
                    // Happens when dragging something OUT of the DnD area
                    this.removeClass('active');
                },
                onInit: function () {
                    // Plugin is ready to use
                    ui_add_log('Penguin initialized :)', 'info');
                },
                onComplete: function () {
                    // All files in the queue are processed (success or error)
                    ui_add_log('All pending tranfers finished');
                },
                onNewFile: function (id, file) {
                    // When a new file is added using the file selector or the DnD area
                    ui_add_log('New file added #' + id);
                    ui_multi_add_file(id, file);
                },
                onBeforeUpload: function (id) {
                    // about tho start uploading a file
                    ui_add_log('Starting the upload of #' + id);
                    ui_multi_update_file_status(id, 'uploading', 'Đang đăng ...');
                    ui_multi_update_file_progress(id, 0, '', true);
                },
                onUploadCanceled: function (id) {
                    // Happens when a file is directly canceled by the user.
                    ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                    ui_multi_update_file_progress(id, 0, 'warning', false);
                },
                onUploadProgress: function (id, percent) {
                    // Updating file progress
                    ui_multi_update_file_progress(id, percent);
                },
                onUploadSuccess: function (id) {
                    // A file was successfully uploaded
                    ui_multi_update_file_status(id, 'success', 'Thành công');
                    ui_multi_update_file_progress(id, 100, 'success', false);
                    loadLibraryImage();
                },
                onUploadError: function (id, xhr, status, message) {
                    ui_multi_update_file_status(id, 'danger', message);
                    ui_multi_update_file_progress(id, 0, 'danger', false);
                },
                onFileSizeError: function (file) {
                    ui_add_log('Hình \'' + file.name + '\' không thể đăng: Vượt quá dung lượng cho phép', 'danger');
                }
            });
        });
    </script>

    <script>
        function ui_add_log(message, color) {
            var d = new Date();

            var dateString = (('0' + d.getHours())).slice(-2) + ':' +
                (('0' + d.getMinutes())).slice(-2) + ':' +
                (('0' + d.getSeconds())).slice(-2);

            color = (typeof color === 'undefined' ? 'muted' : color);

            var template = $('#debug-template').text();
            template = template.replace('%%date%%', dateString);
            template = template.replace('%%message%%', message);
            template = template.replace('%%color%%', color);

            $('#debug').find('li.empty').fadeOut(); // remove the 'no messages yet'
            $('#debug').prepend(template);
        }

        // Creates a new file and add it to our list
        function ui_multi_add_file(id, file) {
            var template = $('#files-template').text();
            template = template.replace('%%filename%%', file.name);

            template = $(template);
            template.prop('id', 'uploaderFile' + id);
            template.data('file-id', id);

            $('#files').find('li.empty').fadeOut(); // remove the 'no files yet'
            $('#files').prepend(template);
        }

        // Changes the status messages on our list
        function ui_multi_update_file_status(id, status, message) {
            $('#uploaderFile' + id).find('span').html(message).prop('class', 'status text-' + status);
        }

        // Updates a file progress, depending on the parameters it may animate it or change the color.
        function ui_multi_update_file_progress(id, percent, color, active) {
            color = (typeof color === 'undefined' ? false : color);
            active = (typeof active === 'undefined' ? true : active);

            var bar = $('#uploaderFile' + id).find('div.progress-bar');

            bar.width(percent + '%').attr('aria-valuenow', percent);
            bar.toggleClass('progress-bar-striped progress-bar-animated', active);

            if (percent === 0) {
                bar.html('');
            } else {
                bar.html(percent + '%');
            }

            if (color !== false) {
                bar.removeClass('bg-success bg-info bg-warning bg-danger');
                bar.addClass('bg-' + color);
            }
        }
        function loadLibraryImage() {
            $.ajax({
                url: "/Admin/LoadLibraryImage",
                success: function (data) {
                    $("#renderLibrary").html(data)
                }
            });
        }

        var listImage = new Array();
        var img = 0;

        function uploadClick() {
            if (listImage.length == 0) {
                listImage = [];
                img = 0;
                loadLibraryImage();
            }
        }

        function addImageToList(e) {
            $(e).children().removeClass("d-none");
            $(e).attr("onclick", "removeImageFromList(this)");
            listImage[img] = $(e).attr("data-name");
            img++;
            console.log(listImage);
        }
        function removeImageFromList(e) {
            $(e).children().addClass("d-none");
            $(e).attr("onclick", "addImageToList(this)");
            listImage.splice(listImage.indexOf($(e).attr("data-name")), 1);
            img--;
            console.log(listImage);
        }

        $("#submitModalImage").click(function () {
            if (listImage.length != 0) {
                var result = listImage.join('|');
                $("#Image").val(result);
                $.ajax({
                    url: "/Admin/LoadSelectImage",
                    data: { imageList: result },
                    success: function (data) {
                        $("#renderImage").html(data)
                    }
                });
            }
            $("#uploadImage").modal("hide");





            console.log(result);
        });
    </script>
}
